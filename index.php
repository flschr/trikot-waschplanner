<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trikot-Waschk√ºche</title>
	<link rel="stylesheet" href="style.css">
	
</head>
<body>

<?php
// Funktion zum Laden der Spieler aus der spieler.csv Datei
function loadPlayers() {
    $players = [];
    $file = fopen('spieler.csv', 'r');
    while (($line = fgetcsv($file)) !== FALSE) {
        $players[] = $line;
    }
    fclose($file);
    return $players;
}

// Funktion zum Laden der Termine aus der termine.csv Datei
function loadTermine() {
    $termine = [];
    $file = fopen('termine.csv', 'r');
    while (($line = fgetcsv($file)) !== FALSE) {
        $termine[] = $line;
    }
    fclose($file);
    return $termine;
}

// Funktion zum Speichern der Termine in die termine.csv Datei
function saveTermine($termine) {
    $file = fopen('termine.csv', 'w');
    foreach ($termine as $termin) {
        fputcsv($file, $termin);
    }
    fclose($file);
}

// Funktion zum Speichern eines Spielers in die spieler.csv Datei
function savePlayer($player, $count) {
    $players = loadPlayers();
    $found = false;
    foreach ($players as &$row) {
        if ($row[0] === $player) {
            $row[1] = $count;
            $found = true;
            break;
        }
    }
    if (!$found) {
        $players[] = [$player, $count];
    }
    $file = fopen('spieler.csv', 'w');
    foreach ($players as $player) {
        fputcsv($file, $player);
    }
    fclose($file);
}

// Wenn der Buchen-Button geklickt wurde
if (isset($_POST['submit'])) {
    // Laden der vorhandenen Termine
    $termine = loadTermine();
    
    // Den ausgew√§hlten Spieler dem Termin zuordnen und in die CSV-Datei schreiben
    $selectedPlayer = $_POST['spieler'];
    $terminIndex = $_POST['termin_index'];
    $termine[$terminIndex][1] = $selectedPlayer;
    saveTermine($termine);
    
    // Z√§hler f√ºr den ausgew√§hlten Spieler erh√∂hen
    savePlayer($selectedPlayer, getPlayerWashes($selectedPlayer) + 1);
    
    // Weiterleitung zur gleichen Seite, um die Tabelle neu zu rendern
    header("Location: {$_SERVER['PHP_SELF']}");
    exit;
}

// Wenn der "Termin freigeben" Button geklickt wurde
if (isset($_POST['release'])) {
    // Laden der vorhandenen Termine
    $termine = loadTermine();
    
    // Index des zu l√∂schenden Termins
    $terminIndex = $_POST['termin_index'];
    
    // L√∂schen des Spielernamens f√ºr diesen Termin
    $releasedPlayer = $termine[$terminIndex][1];
    $termine[$terminIndex][1] = '';
    
    // Speichern der aktualisierten Termine
    saveTermine($termine);
    
    // Z√§hler f√ºr den freigegebenen Spieler verringern
    savePlayer($releasedPlayer, getPlayerWashes($releasedPlayer) - 1);
    
    // Weiterleitung zur gleichen Seite, um die Tabelle neu zu rendern
    header("Location: {$_SERVER['PHP_SELF']}");
    exit;
}

// Funktion zur Ermittlung der Anzahl der W√§schen f√ºr einen Spieler
function getPlayerWashes($player) {
    $players = loadPlayers();
    foreach ($players as $row) {
        if ($row[0] === $player) {
            return $row[1];
        }
    }
    return 0;
}

echo "<h1>Trikot-Waschk√ºche</h1>";
echo "<h2>Die n√§chsten Spieltermine</h2>";

// HTML-Tabelle f√ºr die Termine beginnen
echo "<table border='1'>";
echo "<tr><th>Termin</th><th>Wer w√§scht?</th><th>Termin freigeben</th></tr>";

// Laden der vorhandenen Termine
$termine = loadTermine();

// Wenn ein Termin vorhanden ist
if (!empty($termine)) {
    // Durchgehen aller Termine
    foreach ($termine as $index => $termin) {
        $terminName = $termin[0];
        $spielerName = $termin[1];
        
        echo "<tr>";
        echo "<td>$terminName</td>";
        echo "<td>";
        
        // Wenn kein Spielername vorhanden ist
        if (empty($spielerName)) {
            // Laden aller Spieler und Sortieren alphabetisch
            $players = loadPlayers();
            usort($players, function($a, $b) {
                return strcmp($a[0], $b[0]); // Sortieren der Spieler alphabetisch nach Namen
            });

            echo "<form method='post'>";
            echo "<select name='spieler' data-index='$index'>";
            // Leeroption f√ºr das Dropdown hinzuf√ºgen
            echo "<option value=''>Bitte w√§hlen</option>";
            // Dropdown-Feld mit alphabetisch sortierten Spielernamen ausgeben
            foreach ($players as $player) {
                echo "<option value='{$player[0]}'>{$player[0]}</option>";
            }
            echo "</select>";
            echo "<input type='hidden' name='termin_index' value='$index'>";
            echo "<input type='submit' name='submit' value='Buchen' onclick='return validateSelection($index)'>";
            echo "</form>";
        } else {
            // Wenn ein Spielername vorhanden ist, einfach den Termin in der Tabelle ausgeben
            echo "$spielerName";
        }
        echo "</td>";
        
        // Spalte f√ºr "Termin freigeben"
        echo "<td>";
        if (!empty($spielerName)) {
            echo "<form method='post'>";
            echo "<input type='checkbox' name='release_check[$index]' value='1' id='releaseCheck-$index'>";
            echo "<input type='hidden' name='termin_index' value='$index'>";
            echo "<input type='submit' name='release' value='Freigeben' id='releaseButton-$index' disabled>";
            echo "</form>";
            echo "<script>
                document.getElementById('releaseCheck-$index').addEventListener('change', function() {
                    document.getElementById('releaseButton-$index').disabled = !this.checked;
                });
            </script>";
        }
        echo "</td>";
        
        echo "</tr>";
    }
} else {
    // Wenn keine Termine vorhanden sind
    echo "<tr><td colspan='3'>Keine Termine vorhanden.</td></tr>";
}

// HTML-Tabelle f√ºr die Termine beenden
echo "</table>";
echo "<p class='hinweis'>Um f√ºr einen Spieltag die Trikotw√§sche zu √ºbernehmen, in der Tabelle den gew√ºnschten Termin ausw√§hlen und mit einem Klick auf Buchen best√§tigen. Sollte ein bereits gebuchter Termin nicht √ºbernommen werden k√∂nnen, kann er √ºber die Funktion 'Termin freigeben' zur erneuten Buchung f√ºr eine andere Familie verf√ºgbar gemacht werden.</p>";

echo "<br>";

// HTML-Tabelle f√ºr die Wasch-Statistik beginnen
echo "<h2>Waschhelden Rangliste ‚öΩüëïüí™üèª‚Äç</h2>";
echo "<table border='1'>";
echo "<tr><th>Name</th><th>Vollwaschladungen</th></tr>";

// Laden der Spieler und Sortieren nach Anzahl der W√§schen
$players = loadPlayers();
usort($players, function($a, $b) {
    return $b[1] - $a[1]; // Sortieren absteigend nach der Anzahl der W√§schen
});

// Durchgehen aller Spieler und Anzeigen in der Tabelle
foreach ($players as $player) {
    echo "<tr>";
    echo "<td>{$player[0]}</td>";
    echo "<td>{$player[1]}</td>";
    echo "</tr>";
}

// HTML-Tabelle f√ºr die Wasch-Statistik beenden
echo "</table>";

echo "<p class='hinweis'>Die Statistik wird zum Beginn der neuen Saison zur√ºckgesetzt.</p>";

echo "<p>Waschtermine als Smartphone-Kalender <a href='webcal://trikots.gaehn.org/ical.php'>abonnieren</a>.</p>";
echo "<p><a href='termine.php'>Terminverwaltung</a> | <a href='spieler.php'>Spielerverwaltung</a></p>";

?>
<script>
    function validateSelection(index) {
        var selectElement = document.querySelector('select[name="spieler"][data-index="' + index + '"]');
        if (selectElement.value === '') {
            alert('Bitte eine Auswahl treffen.');
            return false;
        }
        return true;
    }
</script>
</body>
</html>
